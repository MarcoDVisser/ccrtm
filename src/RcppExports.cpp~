// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// cJfunc1
double cJfunc1(double k, double l, double t);
RcppExport SEXP _ccrtm_cJfunc1(SEXP kSEXP, SEXP lSEXP, SEXP tSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type k(kSEXP);
    Rcpp::traits::input_parameter< double >::type l(lSEXP);
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    rcpp_result_gen = Rcpp::wrap(cJfunc1(k, l, t));
    return rcpp_result_gen;
END_RCPP
}
// cJfunc2or3
double cJfunc2or3(double k, double l, double t);
RcppExport SEXP _ccrtm_cJfunc2or3(SEXP kSEXP, SEXP lSEXP, SEXP tSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type k(kSEXP);
    Rcpp::traits::input_parameter< double >::type l(lSEXP);
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    rcpp_result_gen = Rcpp::wrap(cJfunc2or3(k, l, t));
    return rcpp_result_gen;
END_RCPP
}
// cReflTrans
List cReflTrans(NumericVector rho, NumericVector tau, double lai, NumericVector att, NumericVector m, NumericVector sigb, double ks, double ko, NumericVector sf, NumericVector sb, NumericVector vf, NumericVector vb);
RcppExport SEXP _ccrtm_cReflTrans(SEXP rhoSEXP, SEXP tauSEXP, SEXP laiSEXP, SEXP attSEXP, SEXP mSEXP, SEXP sigbSEXP, SEXP ksSEXP, SEXP koSEXP, SEXP sfSEXP, SEXP sbSEXP, SEXP vfSEXP, SEXP vbSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< double >::type lai(laiSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type att(attSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type m(mSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type sigb(sigbSEXP);
    Rcpp::traits::input_parameter< double >::type ks(ksSEXP);
    Rcpp::traits::input_parameter< double >::type ko(koSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type sf(sfSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type sb(sbSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type vf(vfSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type vb(vbSEXP);
    rcpp_result_gen = Rcpp::wrap(cReflTrans(rho, tau, lai, att, m, sigb, ks, ko, sf, sb, vf, vb));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_ccrtm_cJfunc1", (DL_FUNC) &_ccrtm_cJfunc1, 3},
    {"_ccrtm_cJfunc2or3", (DL_FUNC) &_ccrtm_cJfunc2or3, 3},
    {"_ccrtm_cReflTrans", (DL_FUNC) &_ccrtm_cReflTrans, 12},
    {NULL, NULL, 0}
};

RcppExport void R_init_ccrtm(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
