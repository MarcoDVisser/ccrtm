% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tools.R
\name{dPCA}
\alias{dPCA}
\title{Delchambre's Weighted PCA function}
\usage{
dPCA(D, W, xi = rep(1, ncol(W)), eigendecom = TRUE)
}
\arguments{
\item{W}{Weight matrix, similar to X, but containing data weights.}

\item{xi}{Regularization factor: controls the influence of
uncertain (rare) variables.}

\item{X}{Dataset matrix with columns corresponding to variables and rows
to oberservations (as is standard in R, but in constrast to Delchambre's code).
The matrix will be scaled after the weighted mean is subtracted in the code
no need to do this prior as in the original Delchambre code.}

\item{ncomp}{number of principle components to retrieve}

\item{niter}{number of iterations, a larger number allows more
precise estimation of the princomp.}

\item{nrefine}{parameters that allows refinment. Advice is to
not touch this parameter unless you know what you are doing.}
}
\value{
Principle components arranged in columns
 \itemize{
\item [1] = P: Principle components
\item [2] = C: Coefficients 
\item [3] = PC: Projected original data (PC = P%*%C)
\item [4] = variance explained
}
}
\description{
Delchambre's Weighted PCA function
}
\examples{
{
 set.seed(2020)
 X<-matrix(rnorm(10*10,0,4),ncol=10)
 W<-matrix(runif(10*10,0.999,1),ncol=10) ## pretty certain data


pca<-princomp(scale(X))
dpca<-dPCA(scale(X),W)[[2]]


} 
}
\author{
Ludovic Delchambre (original matlab), Marco D. Visser (R translation).
}
